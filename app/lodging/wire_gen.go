// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"core/internal/conf"
	"core/pkg/lodging/biz"
	"core/pkg/lodging/data"
	"core/pkg/lodging/server"
	"core/pkg/lodging/service"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(server *conf.Server, data *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	lodging_dataData, cleanup, err := lodging_data.NewData(data, logger)
	if err != nil {
		return nil, nil, err
	}
	propertyRepo := lodging_data.NewPropertyRepo(lodging_dataData, logger)
	propertyAction := lodging_biz.NewPropertyAction(propertyRepo, logger)
	propertyService := lodging_service.NewPropertyService(propertyAction)
	grpcServer := lodging_server.NewLodgingGrpcServer(server, logger, propertyService)
	httpServer := lodging_server.NewLodgingHTTPServer(server, logger, propertyService)
	app := newLodgingApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
