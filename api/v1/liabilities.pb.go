// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: v1/liabilities.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Liability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Liability:
	//
	//	*Liability_Credit
	//	*Liability_Mortgage
	//	*Liability_Student
	Liability isLiability_Liability `protobuf_oneof:"liability"`
	Deleted   bool                  `protobuf:"varint,19,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Synced    bool                  `protobuf:"varint,20,opt,name=synced,proto3" json:"synced,omitempty"`
}

func (x *Liability) Reset() {
	*x = Liability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Liability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Liability) ProtoMessage() {}

func (x *Liability) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Liability.ProtoReflect.Descriptor instead.
func (*Liability) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{0}
}

func (x *Liability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Liability) GetLiability() isLiability_Liability {
	if m != nil {
		return m.Liability
	}
	return nil
}

func (x *Liability) GetCredit() *CreditLiability {
	if x, ok := x.GetLiability().(*Liability_Credit); ok {
		return x.Credit
	}
	return nil
}

func (x *Liability) GetMortgage() *MortgageLiability {
	if x, ok := x.GetLiability().(*Liability_Mortgage); ok {
		return x.Mortgage
	}
	return nil
}

func (x *Liability) GetStudent() *StudentLiability {
	if x, ok := x.GetLiability().(*Liability_Student); ok {
		return x.Student
	}
	return nil
}

func (x *Liability) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Liability) GetSynced() bool {
	if x != nil {
		return x.Synced
	}
	return false
}

type isLiability_Liability interface {
	isLiability_Liability()
}

type Liability_Credit struct {
	Credit *CreditLiability `protobuf:"bytes,2,opt,name=credit,proto3,oneof"`
}

type Liability_Mortgage struct {
	Mortgage *MortgageLiability `protobuf:"bytes,3,opt,name=mortgage,proto3,oneof"`
}

type Liability_Student struct {
	Student *StudentLiability `protobuf:"bytes,4,opt,name=student,proto3,oneof"`
}

func (*Liability_Credit) isLiability_Liability() {}

func (*Liability_Mortgage) isLiability_Liability() {}

func (*Liability_Student) isLiability_Liability() {}

type GetLiabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLiabilityRequest) Reset() {
	*x = GetLiabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiabilityRequest) ProtoMessage() {}

func (x *GetLiabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiabilityRequest.ProtoReflect.Descriptor instead.
func (*GetLiabilityRequest) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{1}
}

func (x *GetLiabilityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLiabilityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool       `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Liability *Liability `protobuf:"bytes,2,opt,name=liability,proto3" json:"liability,omitempty"`
	Id        string     `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLiabilityReply) Reset() {
	*x = GetLiabilityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiabilityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiabilityReply) ProtoMessage() {}

func (x *GetLiabilityReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiabilityReply.ProtoReflect.Descriptor instead.
func (*GetLiabilityReply) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{2}
}

func (x *GetLiabilityReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetLiabilityReply) GetLiability() *Liability {
	if x != nil {
		return x.Liability
	}
	return nil
}

func (x *GetLiabilityReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLiabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Since *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=since,proto3" json:"since,omitempty"`
}

func (x *GetLiabilitiesRequest) Reset() {
	*x = GetLiabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiabilitiesRequest) ProtoMessage() {}

func (x *GetLiabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetLiabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{3}
}

func (x *GetLiabilitiesRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetLiabilitiesRequest) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

type GetLiabilitiesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credit   []*CreditLiability   `protobuf:"bytes,1,rep,name=credit,proto3" json:"credit,omitempty"`
	Mortgage []*MortgageLiability `protobuf:"bytes,2,rep,name=mortgage,proto3" json:"mortgage,omitempty"`
	Student  []*StudentLiability  `protobuf:"bytes,3,rep,name=student,proto3" json:"student,omitempty"`
	Ok       bool                 `protobuf:"varint,4,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *GetLiabilitiesReply) Reset() {
	*x = GetLiabilitiesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiabilitiesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiabilitiesReply) ProtoMessage() {}

func (x *GetLiabilitiesReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiabilitiesReply.ProtoReflect.Descriptor instead.
func (*GetLiabilitiesReply) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{4}
}

func (x *GetLiabilitiesReply) GetCredit() []*CreditLiability {
	if x != nil {
		return x.Credit
	}
	return nil
}

func (x *GetLiabilitiesReply) GetMortgage() []*MortgageLiability {
	if x != nil {
		return x.Mortgage
	}
	return nil
}

func (x *GetLiabilitiesReply) GetStudent() []*StudentLiability {
	if x != nil {
		return x.Student
	}
	return nil
}

func (x *GetLiabilitiesReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CreditLiability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Aprs                   []*Apr  `protobuf:"bytes,2,rep,name=aprs,proto3" json:"aprs,omitempty"`
	IsOverdue              bool    `protobuf:"varint,3,opt,name=is_overdue,json=isOverdue,proto3" json:"is_overdue,omitempty"`
	LastPaymentAmount      float32 `protobuf:"fixed32,4,opt,name=last_payment_amount,json=lastPaymentAmount,proto3" json:"last_payment_amount,omitempty"`
	LastPaymentDate        string  `protobuf:"bytes,5,opt,name=last_payment_date,json=lastPaymentDate,proto3" json:"last_payment_date,omitempty"`
	LastStatementIssueDate string  `protobuf:"bytes,6,opt,name=last_statement_issue_date,json=lastStatementIssueDate,proto3" json:"last_statement_issue_date,omitempty"`
	LastStatementBalance   float32 `protobuf:"fixed32,7,opt,name=last_statement_balance,json=lastStatementBalance,proto3" json:"last_statement_balance,omitempty"`
	MinimumPaymentAmount   float32 `protobuf:"fixed32,8,opt,name=minimum_payment_amount,json=minimumPaymentAmount,proto3" json:"minimum_payment_amount,omitempty"`
	NextPaymentDueDate     string  `protobuf:"bytes,9,opt,name=next_payment_due_date,json=nextPaymentDueDate,proto3" json:"next_payment_due_date,omitempty"`
	AccountId              string  `protobuf:"bytes,10,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *CreditLiability) Reset() {
	*x = CreditLiability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditLiability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditLiability) ProtoMessage() {}

func (x *CreditLiability) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditLiability.ProtoReflect.Descriptor instead.
func (*CreditLiability) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{5}
}

func (x *CreditLiability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreditLiability) GetAprs() []*Apr {
	if x != nil {
		return x.Aprs
	}
	return nil
}

func (x *CreditLiability) GetIsOverdue() bool {
	if x != nil {
		return x.IsOverdue
	}
	return false
}

func (x *CreditLiability) GetLastPaymentAmount() float32 {
	if x != nil {
		return x.LastPaymentAmount
	}
	return 0
}

func (x *CreditLiability) GetLastPaymentDate() string {
	if x != nil {
		return x.LastPaymentDate
	}
	return ""
}

func (x *CreditLiability) GetLastStatementIssueDate() string {
	if x != nil {
		return x.LastStatementIssueDate
	}
	return ""
}

func (x *CreditLiability) GetLastStatementBalance() float32 {
	if x != nil {
		return x.LastStatementBalance
	}
	return 0
}

func (x *CreditLiability) GetMinimumPaymentAmount() float32 {
	if x != nil {
		return x.MinimumPaymentAmount
	}
	return 0
}

func (x *CreditLiability) GetNextPaymentDueDate() string {
	if x != nil {
		return x.NextPaymentDueDate
	}
	return ""
}

func (x *CreditLiability) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type Apr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AprPercentage        float32 `protobuf:"fixed32,1,opt,name=apr_percentage,json=aprPercentage,proto3" json:"apr_percentage,omitempty"`
	AprType              string  `protobuf:"bytes,2,opt,name=apr_type,json=aprType,proto3" json:"apr_type,omitempty"`
	BalanceSubjectToApr  float32 `protobuf:"fixed32,3,opt,name=balance_subject_to_apr,json=balanceSubjectToApr,proto3" json:"balance_subject_to_apr,omitempty"`
	InterestChargeAmount float32 `protobuf:"fixed32,4,opt,name=interest_charge_amount,json=interestChargeAmount,proto3" json:"interest_charge_amount,omitempty"`
	Id                   string  `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Apr) Reset() {
	*x = Apr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Apr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Apr) ProtoMessage() {}

func (x *Apr) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Apr.ProtoReflect.Descriptor instead.
func (*Apr) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{6}
}

func (x *Apr) GetAprPercentage() float32 {
	if x != nil {
		return x.AprPercentage
	}
	return 0
}

func (x *Apr) GetAprType() string {
	if x != nil {
		return x.AprType
	}
	return ""
}

func (x *Apr) GetBalanceSubjectToApr() float32 {
	if x != nil {
		return x.BalanceSubjectToApr
	}
	return 0
}

func (x *Apr) GetInterestChargeAmount() float32 {
	if x != nil {
		return x.InterestChargeAmount
	}
	return 0
}

func (x *Apr) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MortgageLiability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountNumber              string           `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	CurrentLateFee             float32          `protobuf:"fixed32,3,opt,name=current_late_fee,json=currentLateFee,proto3" json:"current_late_fee,omitempty"`
	EscrowBalance              float32          `protobuf:"fixed32,4,opt,name=escrow_balance,json=escrowBalance,proto3" json:"escrow_balance,omitempty"`
	HasPmi                     bool             `protobuf:"varint,5,opt,name=has_pmi,json=hasPmi,proto3" json:"has_pmi,omitempty"`
	HasPrepaymentPenalty       bool             `protobuf:"varint,6,opt,name=has_prepayment_penalty,json=hasPrepaymentPenalty,proto3" json:"has_prepayment_penalty,omitempty"`
	InterestRate               *InterestRate    `protobuf:"bytes,7,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	LastPaymentAmount          float32          `protobuf:"fixed32,8,opt,name=last_payment_amount,json=lastPaymentAmount,proto3" json:"last_payment_amount,omitempty"`
	LastPaymentDate            string           `protobuf:"bytes,9,opt,name=last_payment_date,json=lastPaymentDate,proto3" json:"last_payment_date,omitempty"`
	LoanTerm                   string           `protobuf:"bytes,10,opt,name=loan_term,json=loanTerm,proto3" json:"loan_term,omitempty"`
	LoanTypeDescription        string           `protobuf:"bytes,11,opt,name=loan_type_description,json=loanTypeDescription,proto3" json:"loan_type_description,omitempty"`
	MaturityDate               string           `protobuf:"bytes,12,opt,name=maturity_date,json=maturityDate,proto3" json:"maturity_date,omitempty"`
	NextMonthlyPayment         float32          `protobuf:"fixed32,13,opt,name=next_monthly_payment,json=nextMonthlyPayment,proto3" json:"next_monthly_payment,omitempty"`
	NextPaymentDueDate         string           `protobuf:"bytes,14,opt,name=next_payment_due_date,json=nextPaymentDueDate,proto3" json:"next_payment_due_date,omitempty"`
	OriginationDate            string           `protobuf:"bytes,15,opt,name=origination_date,json=originationDate,proto3" json:"origination_date,omitempty"`
	OriginationPrincipalAmount float32          `protobuf:"fixed32,16,opt,name=origination_principal_amount,json=originationPrincipalAmount,proto3" json:"origination_principal_amount,omitempty"`
	PastDueAmount              float32          `protobuf:"fixed32,17,opt,name=past_due_amount,json=pastDueAmount,proto3" json:"past_due_amount,omitempty"`
	PropertyAddress            *PropertyAddress `protobuf:"bytes,18,opt,name=property_address,json=propertyAddress,proto3" json:"property_address,omitempty"`
	YtdInterestPaid            float32          `protobuf:"fixed32,19,opt,name=ytd_interest_paid,json=ytdInterestPaid,proto3" json:"ytd_interest_paid,omitempty"`
	YtdPrincipalPaid           float32          `protobuf:"fixed32,20,opt,name=ytd_principal_paid,json=ytdPrincipalPaid,proto3" json:"ytd_principal_paid,omitempty"`
	AccountId                  string           `protobuf:"bytes,21,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *MortgageLiability) Reset() {
	*x = MortgageLiability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MortgageLiability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MortgageLiability) ProtoMessage() {}

func (x *MortgageLiability) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MortgageLiability.ProtoReflect.Descriptor instead.
func (*MortgageLiability) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{7}
}

func (x *MortgageLiability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MortgageLiability) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *MortgageLiability) GetCurrentLateFee() float32 {
	if x != nil {
		return x.CurrentLateFee
	}
	return 0
}

func (x *MortgageLiability) GetEscrowBalance() float32 {
	if x != nil {
		return x.EscrowBalance
	}
	return 0
}

func (x *MortgageLiability) GetHasPmi() bool {
	if x != nil {
		return x.HasPmi
	}
	return false
}

func (x *MortgageLiability) GetHasPrepaymentPenalty() bool {
	if x != nil {
		return x.HasPrepaymentPenalty
	}
	return false
}

func (x *MortgageLiability) GetInterestRate() *InterestRate {
	if x != nil {
		return x.InterestRate
	}
	return nil
}

func (x *MortgageLiability) GetLastPaymentAmount() float32 {
	if x != nil {
		return x.LastPaymentAmount
	}
	return 0
}

func (x *MortgageLiability) GetLastPaymentDate() string {
	if x != nil {
		return x.LastPaymentDate
	}
	return ""
}

func (x *MortgageLiability) GetLoanTerm() string {
	if x != nil {
		return x.LoanTerm
	}
	return ""
}

func (x *MortgageLiability) GetLoanTypeDescription() string {
	if x != nil {
		return x.LoanTypeDescription
	}
	return ""
}

func (x *MortgageLiability) GetMaturityDate() string {
	if x != nil {
		return x.MaturityDate
	}
	return ""
}

func (x *MortgageLiability) GetNextMonthlyPayment() float32 {
	if x != nil {
		return x.NextMonthlyPayment
	}
	return 0
}

func (x *MortgageLiability) GetNextPaymentDueDate() string {
	if x != nil {
		return x.NextPaymentDueDate
	}
	return ""
}

func (x *MortgageLiability) GetOriginationDate() string {
	if x != nil {
		return x.OriginationDate
	}
	return ""
}

func (x *MortgageLiability) GetOriginationPrincipalAmount() float32 {
	if x != nil {
		return x.OriginationPrincipalAmount
	}
	return 0
}

func (x *MortgageLiability) GetPastDueAmount() float32 {
	if x != nil {
		return x.PastDueAmount
	}
	return 0
}

func (x *MortgageLiability) GetPropertyAddress() *PropertyAddress {
	if x != nil {
		return x.PropertyAddress
	}
	return nil
}

func (x *MortgageLiability) GetYtdInterestPaid() float32 {
	if x != nil {
		return x.YtdInterestPaid
	}
	return 0
}

func (x *MortgageLiability) GetYtdPrincipalPaid() float32 {
	if x != nil {
		return x.YtdPrincipalPaid
	}
	return 0
}

func (x *MortgageLiability) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type InterestRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percentage float32 `protobuf:"fixed32,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Type       string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *InterestRate) Reset() {
	*x = InterestRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterestRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterestRate) ProtoMessage() {}

func (x *InterestRate) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterestRate.ProtoReflect.Descriptor instead.
func (*InterestRate) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{8}
}

func (x *InterestRate) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *InterestRate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PropertyAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City       string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	PostalCode string `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Region     string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	Street     string `protobuf:"bytes,5,opt,name=street,proto3" json:"street,omitempty"`
}

func (x *PropertyAddress) Reset() {
	*x = PropertyAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyAddress) ProtoMessage() {}

func (x *PropertyAddress) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyAddress.ProtoReflect.Descriptor instead.
func (*PropertyAddress) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{9}
}

func (x *PropertyAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *PropertyAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *PropertyAddress) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *PropertyAddress) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PropertyAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

type StudentLiability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountNumber              string           `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	DisbursementDates          []string         `protobuf:"bytes,3,rep,name=disbursement_dates,json=disbursementDates,proto3" json:"disbursement_dates,omitempty"`
	ExpectedPayoffDate         string           `protobuf:"bytes,4,opt,name=expected_payoff_date,json=expectedPayoffDate,proto3" json:"expected_payoff_date,omitempty"`
	Guarantor                  string           `protobuf:"bytes,5,opt,name=guarantor,proto3" json:"guarantor,omitempty"`
	InterestRatePercentage     float32          `protobuf:"fixed32,6,opt,name=interest_rate_percentage,json=interestRatePercentage,proto3" json:"interest_rate_percentage,omitempty"`
	IsOverdue                  bool             `protobuf:"varint,7,opt,name=is_overdue,json=isOverdue,proto3" json:"is_overdue,omitempty"`
	LastPaymentAmount          float32          `protobuf:"fixed32,8,opt,name=last_payment_amount,json=lastPaymentAmount,proto3" json:"last_payment_amount,omitempty"`
	LastPaymentDate            string           `protobuf:"bytes,9,opt,name=last_payment_date,json=lastPaymentDate,proto3" json:"last_payment_date,omitempty"`
	LastStatementIssueDate     string           `protobuf:"bytes,10,opt,name=last_statement_issue_date,json=lastStatementIssueDate,proto3" json:"last_statement_issue_date,omitempty"`
	LoanName                   string           `protobuf:"bytes,11,opt,name=loan_name,json=loanName,proto3" json:"loan_name,omitempty"`
	LoanStatus                 *LoanStatus      `protobuf:"bytes,12,opt,name=loan_status,json=loanStatus,proto3" json:"loan_status,omitempty"`
	MinimumPaymentAmount       float32          `protobuf:"fixed32,13,opt,name=minimum_payment_amount,json=minimumPaymentAmount,proto3" json:"minimum_payment_amount,omitempty"`
	NextPaymentDueDate         string           `protobuf:"bytes,14,opt,name=next_payment_due_date,json=nextPaymentDueDate,proto3" json:"next_payment_due_date,omitempty"`
	OriginationDate            string           `protobuf:"bytes,15,opt,name=origination_date,json=originationDate,proto3" json:"origination_date,omitempty"`
	OriginationPrincipalAmount float32          `protobuf:"fixed32,16,opt,name=origination_principal_amount,json=originationPrincipalAmount,proto3" json:"origination_principal_amount,omitempty"`
	OutstandingInterestAmount  float32          `protobuf:"fixed32,17,opt,name=outstanding_interest_amount,json=outstandingInterestAmount,proto3" json:"outstanding_interest_amount,omitempty"`
	PaymentReferenceNumber     string           `protobuf:"bytes,18,opt,name=payment_reference_number,json=paymentReferenceNumber,proto3" json:"payment_reference_number,omitempty"`
	PslfStatus                 *PslfStatus      `protobuf:"bytes,19,opt,name=pslf_status,json=pslfStatus,proto3" json:"pslf_status,omitempty"`
	RepaymentPlan              *RepaymentPlan   `protobuf:"bytes,20,opt,name=repayment_plan,json=repaymentPlan,proto3" json:"repayment_plan,omitempty"`
	SequenceNumber             string           `protobuf:"bytes,21,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	ServicerAddress            *ServicerAddress `protobuf:"bytes,22,opt,name=servicer_address,json=servicerAddress,proto3" json:"servicer_address,omitempty"`
	YtdInterestPaid            float32          `protobuf:"fixed32,23,opt,name=ytd_interest_paid,json=ytdInterestPaid,proto3" json:"ytd_interest_paid,omitempty"`
	YtdPrincipalPaid           float32          `protobuf:"fixed32,24,opt,name=ytd_principal_paid,json=ytdPrincipalPaid,proto3" json:"ytd_principal_paid,omitempty"`
	AccountId                  string           `protobuf:"bytes,25,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *StudentLiability) Reset() {
	*x = StudentLiability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentLiability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentLiability) ProtoMessage() {}

func (x *StudentLiability) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentLiability.ProtoReflect.Descriptor instead.
func (*StudentLiability) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{10}
}

func (x *StudentLiability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StudentLiability) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *StudentLiability) GetDisbursementDates() []string {
	if x != nil {
		return x.DisbursementDates
	}
	return nil
}

func (x *StudentLiability) GetExpectedPayoffDate() string {
	if x != nil {
		return x.ExpectedPayoffDate
	}
	return ""
}

func (x *StudentLiability) GetGuarantor() string {
	if x != nil {
		return x.Guarantor
	}
	return ""
}

func (x *StudentLiability) GetInterestRatePercentage() float32 {
	if x != nil {
		return x.InterestRatePercentage
	}
	return 0
}

func (x *StudentLiability) GetIsOverdue() bool {
	if x != nil {
		return x.IsOverdue
	}
	return false
}

func (x *StudentLiability) GetLastPaymentAmount() float32 {
	if x != nil {
		return x.LastPaymentAmount
	}
	return 0
}

func (x *StudentLiability) GetLastPaymentDate() string {
	if x != nil {
		return x.LastPaymentDate
	}
	return ""
}

func (x *StudentLiability) GetLastStatementIssueDate() string {
	if x != nil {
		return x.LastStatementIssueDate
	}
	return ""
}

func (x *StudentLiability) GetLoanName() string {
	if x != nil {
		return x.LoanName
	}
	return ""
}

func (x *StudentLiability) GetLoanStatus() *LoanStatus {
	if x != nil {
		return x.LoanStatus
	}
	return nil
}

func (x *StudentLiability) GetMinimumPaymentAmount() float32 {
	if x != nil {
		return x.MinimumPaymentAmount
	}
	return 0
}

func (x *StudentLiability) GetNextPaymentDueDate() string {
	if x != nil {
		return x.NextPaymentDueDate
	}
	return ""
}

func (x *StudentLiability) GetOriginationDate() string {
	if x != nil {
		return x.OriginationDate
	}
	return ""
}

func (x *StudentLiability) GetOriginationPrincipalAmount() float32 {
	if x != nil {
		return x.OriginationPrincipalAmount
	}
	return 0
}

func (x *StudentLiability) GetOutstandingInterestAmount() float32 {
	if x != nil {
		return x.OutstandingInterestAmount
	}
	return 0
}

func (x *StudentLiability) GetPaymentReferenceNumber() string {
	if x != nil {
		return x.PaymentReferenceNumber
	}
	return ""
}

func (x *StudentLiability) GetPslfStatus() *PslfStatus {
	if x != nil {
		return x.PslfStatus
	}
	return nil
}

func (x *StudentLiability) GetRepaymentPlan() *RepaymentPlan {
	if x != nil {
		return x.RepaymentPlan
	}
	return nil
}

func (x *StudentLiability) GetSequenceNumber() string {
	if x != nil {
		return x.SequenceNumber
	}
	return ""
}

func (x *StudentLiability) GetServicerAddress() *ServicerAddress {
	if x != nil {
		return x.ServicerAddress
	}
	return nil
}

func (x *StudentLiability) GetYtdInterestPaid() float32 {
	if x != nil {
		return x.YtdInterestPaid
	}
	return 0
}

func (x *StudentLiability) GetYtdPrincipalPaid() float32 {
	if x != nil {
		return x.YtdPrincipalPaid
	}
	return 0
}

func (x *StudentLiability) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type LoanStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndDate string `protobuf:"bytes,1,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *LoanStatus) Reset() {
	*x = LoanStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanStatus) ProtoMessage() {}

func (x *LoanStatus) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanStatus.ProtoReflect.Descriptor instead.
func (*LoanStatus) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{11}
}

func (x *LoanStatus) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *LoanStatus) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PslfStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstimatedEligibilityDate string `protobuf:"bytes,1,opt,name=estimated_eligibility_date,json=estimatedEligibilityDate,proto3" json:"estimated_eligibility_date,omitempty"`
	PaymentsMade             int32  `protobuf:"varint,2,opt,name=payments_made,json=paymentsMade,proto3" json:"payments_made,omitempty"`
	PaymentsRemaining        int32  `protobuf:"varint,3,opt,name=payments_remaining,json=paymentsRemaining,proto3" json:"payments_remaining,omitempty"`
}

func (x *PslfStatus) Reset() {
	*x = PslfStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PslfStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PslfStatus) ProtoMessage() {}

func (x *PslfStatus) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PslfStatus.ProtoReflect.Descriptor instead.
func (*PslfStatus) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{12}
}

func (x *PslfStatus) GetEstimatedEligibilityDate() string {
	if x != nil {
		return x.EstimatedEligibilityDate
	}
	return ""
}

func (x *PslfStatus) GetPaymentsMade() int32 {
	if x != nil {
		return x.PaymentsMade
	}
	return 0
}

func (x *PslfStatus) GetPaymentsRemaining() int32 {
	if x != nil {
		return x.PaymentsRemaining
	}
	return 0
}

type RepaymentPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *RepaymentPlan) Reset() {
	*x = RepaymentPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepaymentPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepaymentPlan) ProtoMessage() {}

func (x *RepaymentPlan) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepaymentPlan.ProtoReflect.Descriptor instead.
func (*RepaymentPlan) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{13}
}

func (x *RepaymentPlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RepaymentPlan) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ServicerAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City       string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	PostalCode string `protobuf:"bytes,3,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Region     string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	Street     string `protobuf:"bytes,5,opt,name=street,proto3" json:"street,omitempty"`
}

func (x *ServicerAddress) Reset() {
	*x = ServicerAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_liabilities_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicerAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicerAddress) ProtoMessage() {}

func (x *ServicerAddress) ProtoReflect() protoreflect.Message {
	mi := &file_v1_liabilities_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicerAddress.ProtoReflect.Descriptor instead.
func (*ServicerAddress) Descriptor() ([]byte, []int) {
	return file_v1_liabilities_proto_rawDescGZIP(), []int{14}
}

func (x *ServicerAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ServicerAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ServicerAddress) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *ServicerAddress) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ServicerAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

var File_v1_liabilities_proto protoreflect.FileDescriptor

var file_v1_liabilities_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01,
	0x0a, 0x09, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x37,
	0x0a, 0x08, 0x6d, 0x6f, 0x72, 0x74, 0x67, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x72, 0x74, 0x67, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6d,
	0x6f, 0x72, 0x74, 0x67, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x25, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x69, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x09,
	0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x6f, 0x72, 0x74, 0x67, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x6f, 0x72, 0x74, 0x67, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x6d, 0x6f, 0x72, 0x74, 0x67, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0xb6,
	0x03, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x61, 0x70, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x72, 0x52, 0x04, 0x61,
	0x70, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x64,
	0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x11, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39,
	0x0a, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x03, 0x41, 0x70, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x70, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x61, 0x70, 0x72, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x16, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x70, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x6f, 0x41, 0x70, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xae, 0x07, 0x0a,
	0x11, 0x4d, 0x6f, 0x72, 0x74, 0x67, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x5f, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x65, 0x73, 0x63,
	0x72, 0x6f, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61,
	0x73, 0x5f, 0x70, 0x6d, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73,
	0x50, 0x6d, 0x69, 0x12, 0x34, 0x0a, 0x16, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x32, 0x0a,
	0x15, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x6f,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6d,
	0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x6c,
	0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x1c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x1a, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x73, 0x74,
	0x5f, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x74, 0x44, 0x75, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x42, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x79, 0x74, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0f, 0x79, 0x74, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x79, 0x74, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x79, 0x74,
	0x64, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a,
	0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x90, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x22, 0xb3, 0x09, 0x0a, 0x10, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69,
	0x73, 0x62, 0x75, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6f,
	0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6f, 0x66, 0x66, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x12,
	0x38, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x4f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0b,
	0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x1c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x1a, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1b, 0x6f, 0x75, 0x74, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x6f, 0x75,
	0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x73, 0x6c, 0x66, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x73, 0x6c, 0x66, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x70, 0x73, 0x6c, 0x66,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x42, 0x0a,
	0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x79, 0x74, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x79, 0x74,
	0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x50, 0x61, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x79, 0x74, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x79, 0x74, 0x64, 0x50, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0a, 0x4c, 0x6f,
	0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x0a, 0x50, 0x73, 0x6c, 0x66,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x6d, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x45, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x32, 0xd4, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x61, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x13, 0x12, 0x11, 0x2f, 0x6c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x62, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x6c, 0x69,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x1a, 0x0a, 0x06, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x0e, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_liabilities_proto_rawDescOnce sync.Once
	file_v1_liabilities_proto_rawDescData = file_v1_liabilities_proto_rawDesc
)

func file_v1_liabilities_proto_rawDescGZIP() []byte {
	file_v1_liabilities_proto_rawDescOnce.Do(func() {
		file_v1_liabilities_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_liabilities_proto_rawDescData)
	})
	return file_v1_liabilities_proto_rawDescData
}

var file_v1_liabilities_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_v1_liabilities_proto_goTypes = []interface{}{
	(*Liability)(nil),             // 0: api.v1.Liability
	(*GetLiabilityRequest)(nil),   // 1: api.v1.GetLiabilityRequest
	(*GetLiabilityReply)(nil),     // 2: api.v1.GetLiabilityReply
	(*GetLiabilitiesRequest)(nil), // 3: api.v1.GetLiabilitiesRequest
	(*GetLiabilitiesReply)(nil),   // 4: api.v1.GetLiabilitiesReply
	(*CreditLiability)(nil),       // 5: api.v1.CreditLiability
	(*Apr)(nil),                   // 6: api.v1.Apr
	(*MortgageLiability)(nil),     // 7: api.v1.MortgageLiability
	(*InterestRate)(nil),          // 8: api.v1.InterestRate
	(*PropertyAddress)(nil),       // 9: api.v1.PropertyAddress
	(*StudentLiability)(nil),      // 10: api.v1.StudentLiability
	(*LoanStatus)(nil),            // 11: api.v1.LoanStatus
	(*PslfStatus)(nil),            // 12: api.v1.PslfStatus
	(*RepaymentPlan)(nil),         // 13: api.v1.RepaymentPlan
	(*ServicerAddress)(nil),       // 14: api.v1.ServicerAddress
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_v1_liabilities_proto_depIdxs = []int32{
	5,  // 0: api.v1.Liability.credit:type_name -> api.v1.CreditLiability
	7,  // 1: api.v1.Liability.mortgage:type_name -> api.v1.MortgageLiability
	10, // 2: api.v1.Liability.student:type_name -> api.v1.StudentLiability
	0,  // 3: api.v1.GetLiabilityReply.liability:type_name -> api.v1.Liability
	15, // 4: api.v1.GetLiabilitiesRequest.since:type_name -> google.protobuf.Timestamp
	5,  // 5: api.v1.GetLiabilitiesReply.credit:type_name -> api.v1.CreditLiability
	7,  // 6: api.v1.GetLiabilitiesReply.mortgage:type_name -> api.v1.MortgageLiability
	10, // 7: api.v1.GetLiabilitiesReply.student:type_name -> api.v1.StudentLiability
	6,  // 8: api.v1.CreditLiability.aprs:type_name -> api.v1.Apr
	8,  // 9: api.v1.MortgageLiability.interest_rate:type_name -> api.v1.InterestRate
	9,  // 10: api.v1.MortgageLiability.property_address:type_name -> api.v1.PropertyAddress
	11, // 11: api.v1.StudentLiability.loan_status:type_name -> api.v1.LoanStatus
	12, // 12: api.v1.StudentLiability.pslf_status:type_name -> api.v1.PslfStatus
	13, // 13: api.v1.StudentLiability.repayment_plan:type_name -> api.v1.RepaymentPlan
	14, // 14: api.v1.StudentLiability.servicer_address:type_name -> api.v1.ServicerAddress
	1,  // 15: api.v1.Liabilities.GetLiability:input_type -> api.v1.GetLiabilityRequest
	3,  // 16: api.v1.Liabilities.GetLiabilities:input_type -> api.v1.GetLiabilitiesRequest
	2,  // 17: api.v1.Liabilities.GetLiability:output_type -> api.v1.GetLiabilityReply
	4,  // 18: api.v1.Liabilities.GetLiabilities:output_type -> api.v1.GetLiabilitiesReply
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_v1_liabilities_proto_init() }
func file_v1_liabilities_proto_init() {
	if File_v1_liabilities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_liabilities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Liability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiabilityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiabilitiesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditLiability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Apr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MortgageLiability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterestRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentLiability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PslfStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepaymentPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_liabilities_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicerAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_liabilities_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Liability_Credit)(nil),
		(*Liability_Mortgage)(nil),
		(*Liability_Student)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_liabilities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_liabilities_proto_goTypes,
		DependencyIndexes: file_v1_liabilities_proto_depIdxs,
		MessageInfos:      file_v1_liabilities_proto_msgTypes,
	}.Build()
	File_v1_liabilities_proto = out.File
	file_v1_liabilities_proto_rawDesc = nil
	file_v1_liabilities_proto_goTypes = nil
	file_v1_liabilities_proto_depIdxs = nil
}
