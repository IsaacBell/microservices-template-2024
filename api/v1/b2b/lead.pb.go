// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: v1/b2b/lead.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CompanyType int32

const (
	CompanyType_platform CompanyType = 0 // platform user
	CompanyType_prospect CompanyType = 1 // targeted prospect
)

// Enum value maps for CompanyType.
var (
	CompanyType_name = map[int32]string{
		0: "platform",
		1: "prospect",
	}
	CompanyType_value = map[string]int32{
		"platform": 0,
		"prospect": 1,
	}
)

func (x CompanyType) Enum() *CompanyType {
	p := new(CompanyType)
	*p = x
	return p
}

func (x CompanyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompanyType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_b2b_lead_proto_enumTypes[0].Descriptor()
}

func (CompanyType) Type() protoreflect.EnumType {
	return &file_v1_b2b_lead_proto_enumTypes[0]
}

func (x CompanyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompanyType.Descriptor instead.
func (CompanyType) EnumDescriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{0}
}

type Interval int32

const (
	Interval_day   Interval = 0
	Interval_week  Interval = 1
	Interval_month Interval = 2
)

// Enum value maps for Interval.
var (
	Interval_name = map[int32]string{
		0: "day",
		1: "week",
		2: "month",
	}
	Interval_value = map[string]int32{
		"day":   0,
		"week":  1,
		"month": 2,
	}
)

func (x Interval) Enum() *Interval {
	p := new(Interval)
	*p = x
	return p
}

func (x Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_b2b_lead_proto_enumTypes[1].Descriptor()
}

func (Interval) Type() protoreflect.EnumType {
	return &file_v1_b2b_lead_proto_enumTypes[1]
}

func (x Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interval.Descriptor instead.
func (Interval) EnumDescriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{1}
}

type CreateLeadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lead *Lead `protobuf:"bytes,1,opt,name=lead,proto3" json:"lead,omitempty"`
}

func (x *CreateLeadRequest) Reset() {
	*x = CreateLeadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadRequest) ProtoMessage() {}

func (x *CreateLeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadRequest.ProtoReflect.Descriptor instead.
func (*CreateLeadRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{0}
}

func (x *CreateLeadRequest) GetLead() *Lead {
	if x != nil {
		return x.Lead
	}
	return nil
}

type CreateLeadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lead *Lead  `protobuf:"bytes,1,opt,name=lead,proto3" json:"lead,omitempty"`
	Ok   bool   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	Id   string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateLeadReply) Reset() {
	*x = CreateLeadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeadReply) ProtoMessage() {}

func (x *CreateLeadReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeadReply.ProtoReflect.Descriptor instead.
func (*CreateLeadReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLeadReply) GetLead() *Lead {
	if x != nil {
		return x.Lead
	}
	return nil
}

func (x *CreateLeadReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CreateLeadReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *CreateCompanyRequest) Reset() {
	*x = CreateCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyRequest) ProtoMessage() {}

func (x *CreateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCompanyRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

type CreateCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Ok      bool     `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	Id      string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCompanyReply) Reset() {
	*x = CreateCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyReply) ProtoMessage() {}

func (x *CreateCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyReply.ProtoReflect.Descriptor instead.
func (*CreateCompanyReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCompanyReply) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *CreateCompanyReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CreateCompanyReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateLeadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lead *Lead `protobuf:"bytes,1,opt,name=lead,proto3" json:"lead,omitempty"`
}

func (x *UpdateLeadRequest) Reset() {
	*x = UpdateLeadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadRequest) ProtoMessage() {}

func (x *UpdateLeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeadRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLeadRequest) GetLead() *Lead {
	if x != nil {
		return x.Lead
	}
	return nil
}

type UpdateLeadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateLeadReply) Reset() {
	*x = UpdateLeadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadReply) ProtoMessage() {}

func (x *UpdateLeadReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadReply.ProtoReflect.Descriptor instead.
func (*UpdateLeadReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateLeadReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *UpdateLeadReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company *Company `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
}

func (x *UpdateCompanyRequest) Reset() {
	*x = UpdateCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyRequest) ProtoMessage() {}

func (x *UpdateCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCompanyRequest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

type UpdateCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateCompanyReply) Reset() {
	*x = UpdateCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCompanyReply) ProtoMessage() {}

func (x *UpdateCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCompanyReply.ProtoReflect.Descriptor instead.
func (*UpdateCompanyReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCompanyReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *UpdateCompanyReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteLeadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLeadRequest) Reset() {
	*x = DeleteLeadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeadRequest) ProtoMessage() {}

func (x *DeleteLeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeadRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeadRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteLeadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteLeadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ok bool   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *DeleteLeadReply) Reset() {
	*x = DeleteLeadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeadReply) ProtoMessage() {}

func (x *DeleteLeadReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeadReply.ProtoReflect.Descriptor instead.
func (*DeleteLeadReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteLeadReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteLeadReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type DeleteCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCompanyRequest) Reset() {
	*x = DeleteCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyRequest) ProtoMessage() {}

func (x *DeleteCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyRequest.ProtoReflect.Descriptor instead.
func (*DeleteCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCompanyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ok bool   `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *DeleteCompanyReply) Reset() {
	*x = DeleteCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCompanyReply) ProtoMessage() {}

func (x *DeleteCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCompanyReply.ProtoReflect.Descriptor instead.
func (*DeleteCompanyReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCompanyReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteCompanyReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type GetLeadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLeadRequest) Reset() {
	*x = GetLeadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadRequest) ProtoMessage() {}

func (x *GetLeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadRequest.ProtoReflect.Descriptor instead.
func (*GetLeadRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{12}
}

func (x *GetLeadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetLeadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok   bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Lead *Lead  `protobuf:"bytes,2,opt,name=lead,proto3" json:"lead,omitempty"`
	Id   string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetLeadReply) Reset() {
	*x = GetLeadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeadReply) ProtoMessage() {}

func (x *GetLeadReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeadReply.ProtoReflect.Descriptor instead.
func (*GetLeadReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{13}
}

func (x *GetLeadReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetLeadReply) GetLead() *Lead {
	if x != nil {
		return x.Lead
	}
	return nil
}

func (x *GetLeadReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCompanyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCompanyRequest) Reset() {
	*x = GetCompanyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyRequest) ProtoMessage() {}

func (x *GetCompanyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyRequest.ProtoReflect.Descriptor instead.
func (*GetCompanyRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{14}
}

func (x *GetCompanyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCompanyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Company *Company `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	Id      string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCompanyReply) Reset() {
	*x = GetCompanyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyReply) ProtoMessage() {}

func (x *GetCompanyReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyReply.ProtoReflect.Descriptor instead.
func (*GetCompanyReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{15}
}

func (x *GetCompanyReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetCompanyReply) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *GetCompanyReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListLeadsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListLeadsRequest) Reset() {
	*x = ListLeadsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeadsRequest) ProtoMessage() {}

func (x *ListLeadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeadsRequest.ProtoReflect.Descriptor instead.
func (*ListLeadsRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{16}
}

type ListLeadsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListLeadsReply) Reset() {
	*x = ListLeadsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeadsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeadsReply) ProtoMessage() {}

func (x *ListLeadsReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeadsReply.ProtoReflect.Descriptor instead.
func (*ListLeadsReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{17}
}

type ListCompaniesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCompaniesRequest) Reset() {
	*x = ListCompaniesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCompaniesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompaniesRequest) ProtoMessage() {}

func (x *ListCompaniesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompaniesRequest.ProtoReflect.Descriptor instead.
func (*ListCompaniesRequest) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{18}
}

type ListCompaniesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCompaniesReply) Reset() {
	*x = ListCompaniesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCompaniesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompaniesReply) ProtoMessage() {}

func (x *ListCompaniesReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompaniesReply.ProtoReflect.Descriptor instead.
func (*ListCompaniesReply) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{19}
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email         string      `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Address1      string      `protobuf:"bytes,3,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2      string      `protobuf:"bytes,4,opt,name=address2,proto3" json:"address2,omitempty"`
	Phone         string      `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	City          string      `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	State         string      `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	Zipcode       string      `protobuf:"bytes,8,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	Country       string      `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	Name          string      `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Domain        string      `protobuf:"bytes,11,opt,name=domain,proto3" json:"domain,omitempty"`
	Industry      string      `protobuf:"bytes,12,opt,name=industry,proto3" json:"industry,omitempty"`
	Description   string      `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	Type          CompanyType `protobuf:"varint,14,opt,name=type,proto3,enum=api.v1.CompanyType" json:"type,omitempty"`
	Deleted       bool        `protobuf:"varint,15,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Synced        bool        `protobuf:"varint,16,opt,name=synced,proto3" json:"synced,omitempty"`
	EmployeeCount int32       `protobuf:"varint,17,opt,name=employee_count,json=employeeCount,proto3" json:"employee_count,omitempty"`
	YearFounded   int32       `protobuf:"varint,18,opt,name=year_founded,json=yearFounded,proto3" json:"year_founded,omitempty"`
	LinkedinUrl   string      `protobuf:"bytes,19,opt,name=linkedin_url,json=linkedinUrl,proto3" json:"linkedin_url,omitempty"`
	TwitterUrl    string      `protobuf:"bytes,20,opt,name=twitter_url,json=twitterUrl,proto3" json:"twitter_url,omitempty"`
	FacebookUrl   string      `protobuf:"bytes,21,opt,name=facebook_url,json=facebookUrl,proto3" json:"facebook_url,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{20}
}

func (x *Company) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Company) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Company) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *Company) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *Company) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Company) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Company) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Company) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *Company) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Company) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *Company) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Company) GetType() CompanyType {
	if x != nil {
		return x.Type
	}
	return CompanyType_platform
}

func (x *Company) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Company) GetSynced() bool {
	if x != nil {
		return x.Synced
	}
	return false
}

func (x *Company) GetEmployeeCount() int32 {
	if x != nil {
		return x.EmployeeCount
	}
	return 0
}

func (x *Company) GetYearFounded() int32 {
	if x != nil {
		return x.YearFounded
	}
	return 0
}

func (x *Company) GetLinkedinUrl() string {
	if x != nil {
		return x.LinkedinUrl
	}
	return ""
}

func (x *Company) GetTwitterUrl() string {
	if x != nil {
		return x.TwitterUrl
	}
	return ""
}

func (x *Company) GetFacebookUrl() string {
	if x != nil {
		return x.FacebookUrl
	}
	return ""
}

type Lead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email     string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Address1  string   `protobuf:"bytes,3,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2  string   `protobuf:"bytes,4,opt,name=address2,proto3" json:"address2,omitempty"`
	Phone     string   `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	City      string   `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	State     string   `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	Zipcode   string   `protobuf:"bytes,8,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	Country   string   `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	Title     string   `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	CompanyId string   `protobuf:"bytes,11,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Company   *Company `protobuf:"bytes,12,opt,name=company,proto3" json:"company,omitempty"`
	Position  string   `protobuf:"bytes,13,opt,name=position,proto3" json:"position,omitempty"`
	Timezone  string   `protobuf:"bytes,14,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Owner     string   `protobuf:"bytes,15,opt,name=owner,proto3" json:"owner,omitempty"`
	Summary   string   `protobuf:"bytes,16,opt,name=summary,proto3" json:"summary,omitempty"`
	Deleted   bool     `protobuf:"varint,17,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Synced    bool     `protobuf:"varint,18,opt,name=synced,proto3" json:"synced,omitempty"`
}

func (x *Lead) Reset() {
	*x = Lead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lead) ProtoMessage() {}

func (x *Lead) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lead.ProtoReflect.Descriptor instead.
func (*Lead) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{21}
}

func (x *Lead) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lead) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Lead) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *Lead) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *Lead) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Lead) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Lead) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Lead) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *Lead) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Lead) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Lead) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Lead) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *Lead) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Lead) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *Lead) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Lead) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Lead) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Lead) GetSynced() bool {
	if x != nil {
		return x.Synced
	}
	return false
}

type DoNotContact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Lead     *Lead                  `protobuf:"bytes,2,opt,name=lead,proto3" json:"lead,omitempty"`
	Reason   string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	AddedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	Comments []string               `protobuf:"bytes,5,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *DoNotContact) Reset() {
	*x = DoNotContact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoNotContact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoNotContact) ProtoMessage() {}

func (x *DoNotContact) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoNotContact.ProtoReflect.Descriptor instead.
func (*DoNotContact) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{22}
}

func (x *DoNotContact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DoNotContact) GetLead() *Lead {
	if x != nil {
		return x.Lead
	}
	return nil
}

func (x *DoNotContact) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DoNotContact) GetAddedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AddedAt
	}
	return nil
}

func (x *DoNotContact) GetComments() []string {
	if x != nil {
		return x.Comments
	}
	return nil
}

type ContactFrequency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num      int32                  `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Interval Interval               `protobuf:"varint,2,opt,name=interval,proto3,enum=api.v1.Interval" json:"interval,omitempty"`
	FreqTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=freq_time,json=freqTime,proto3" json:"freq_time,omitempty"`
	AddedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=added_at,json=addedAt,proto3" json:"added_at,omitempty"`
	LeadId   string                 `protobuf:"bytes,5,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
	Lead     *Lead                  `protobuf:"bytes,6,opt,name=lead,proto3" json:"lead,omitempty"`
	Global   bool                   `protobuf:"varint,7,opt,name=global,proto3" json:"global,omitempty"`
}

func (x *ContactFrequency) Reset() {
	*x = ContactFrequency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_b2b_lead_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactFrequency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactFrequency) ProtoMessage() {}

func (x *ContactFrequency) ProtoReflect() protoreflect.Message {
	mi := &file_v1_b2b_lead_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactFrequency.ProtoReflect.Descriptor instead.
func (*ContactFrequency) Descriptor() ([]byte, []int) {
	return file_v1_b2b_lead_proto_rawDescGZIP(), []int{23}
}

func (x *ContactFrequency) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ContactFrequency) GetInterval() Interval {
	if x != nil {
		return x.Interval
	}
	return Interval_day
}

func (x *ContactFrequency) GetFreqTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FreqTime
	}
	return nil
}

func (x *ContactFrequency) GetAddedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AddedAt
	}
	return nil
}

func (x *ContactFrequency) GetLeadId() string {
	if x != nil {
		return x.LeadId
	}
	return ""
}

func (x *ContactFrequency) GetLead() *Lead {
	if x != nil {
		return x.Lead
	}
	return nil
}

func (x *ContactFrequency) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

var File_v1_b2b_lead_proto protoreflect.FileDescriptor

var file_v1_b2b_lead_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x31, 0x2f, 0x62, 0x32, 0x62, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x04, 0x6c, 0x65, 0x61,
	0x64, 0x22, 0x53, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64,
	0x52, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x5f, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x04, 0x6c, 0x65, 0x61,
	0x64, 0x22, 0x31, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0x34, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x31, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x6f, 0x6b, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61,
	0x64, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd1,
	0x04, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e,
	0x63, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x79, 0x65, 0x61, 0x72,
	0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x79, 0x65, 0x61, 0x72, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x55,
	0x72, 0x6c, 0x22, 0xd2, 0x03, 0x0a, 0x04, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x44, 0x6f, 0x4e, 0x6f,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x61, 0x64, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x72, 0x65, 0x71, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x61, 0x64, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65,
	0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x52,
	0x04, 0x6c, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2a, 0x29, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x10, 0x01, 0x2a, 0x28, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x77, 0x65, 0x65, 0x6b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x10, 0x02, 0x32, 0xc6, 0x03, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73,
	0x12, 0x57, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x58, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x0d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x22, 0x05, 0x2f, 0x6c,
	0x65, 0x61, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0c, 0x2a, 0x0a, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5c, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x73, 0x12, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12,
	0x0a, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x32, 0x8c, 0x03, 0x0a, 0x05,
	0x4c, 0x65, 0x61, 0x64, 0x73, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x07, 0x22,
	0x05, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x54, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4b,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12,
	0x0a, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4d, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x08, 0x12, 0x06, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x42, 0x35, 0x0a, 0x06, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x29, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2d, 0x32,
	0x30, 0x32, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x32, 0x62, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_b2b_lead_proto_rawDescOnce sync.Once
	file_v1_b2b_lead_proto_rawDescData = file_v1_b2b_lead_proto_rawDesc
)

func file_v1_b2b_lead_proto_rawDescGZIP() []byte {
	file_v1_b2b_lead_proto_rawDescOnce.Do(func() {
		file_v1_b2b_lead_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_b2b_lead_proto_rawDescData)
	})
	return file_v1_b2b_lead_proto_rawDescData
}

var file_v1_b2b_lead_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_b2b_lead_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_v1_b2b_lead_proto_goTypes = []interface{}{
	(CompanyType)(0),              // 0: api.v1.CompanyType
	(Interval)(0),                 // 1: api.v1.Interval
	(*CreateLeadRequest)(nil),     // 2: api.v1.CreateLeadRequest
	(*CreateLeadReply)(nil),       // 3: api.v1.CreateLeadReply
	(*CreateCompanyRequest)(nil),  // 4: api.v1.CreateCompanyRequest
	(*CreateCompanyReply)(nil),    // 5: api.v1.CreateCompanyReply
	(*UpdateLeadRequest)(nil),     // 6: api.v1.UpdateLeadRequest
	(*UpdateLeadReply)(nil),       // 7: api.v1.UpdateLeadReply
	(*UpdateCompanyRequest)(nil),  // 8: api.v1.UpdateCompanyRequest
	(*UpdateCompanyReply)(nil),    // 9: api.v1.UpdateCompanyReply
	(*DeleteLeadRequest)(nil),     // 10: api.v1.DeleteLeadRequest
	(*DeleteLeadReply)(nil),       // 11: api.v1.DeleteLeadReply
	(*DeleteCompanyRequest)(nil),  // 12: api.v1.DeleteCompanyRequest
	(*DeleteCompanyReply)(nil),    // 13: api.v1.DeleteCompanyReply
	(*GetLeadRequest)(nil),        // 14: api.v1.GetLeadRequest
	(*GetLeadReply)(nil),          // 15: api.v1.GetLeadReply
	(*GetCompanyRequest)(nil),     // 16: api.v1.GetCompanyRequest
	(*GetCompanyReply)(nil),       // 17: api.v1.GetCompanyReply
	(*ListLeadsRequest)(nil),      // 18: api.v1.ListLeadsRequest
	(*ListLeadsReply)(nil),        // 19: api.v1.ListLeadsReply
	(*ListCompaniesRequest)(nil),  // 20: api.v1.ListCompaniesRequest
	(*ListCompaniesReply)(nil),    // 21: api.v1.ListCompaniesReply
	(*Company)(nil),               // 22: api.v1.Company
	(*Lead)(nil),                  // 23: api.v1.Lead
	(*DoNotContact)(nil),          // 24: api.v1.DoNotContact
	(*ContactFrequency)(nil),      // 25: api.v1.ContactFrequency
	(*timestamppb.Timestamp)(nil), // 26: google.protobuf.Timestamp
}
var file_v1_b2b_lead_proto_depIdxs = []int32{
	23, // 0: api.v1.CreateLeadRequest.lead:type_name -> api.v1.Lead
	23, // 1: api.v1.CreateLeadReply.lead:type_name -> api.v1.Lead
	22, // 2: api.v1.CreateCompanyRequest.company:type_name -> api.v1.Company
	22, // 3: api.v1.CreateCompanyReply.company:type_name -> api.v1.Company
	23, // 4: api.v1.UpdateLeadRequest.lead:type_name -> api.v1.Lead
	22, // 5: api.v1.UpdateCompanyRequest.company:type_name -> api.v1.Company
	23, // 6: api.v1.GetLeadReply.lead:type_name -> api.v1.Lead
	22, // 7: api.v1.GetCompanyReply.company:type_name -> api.v1.Company
	0,  // 8: api.v1.Company.type:type_name -> api.v1.CompanyType
	22, // 9: api.v1.Lead.company:type_name -> api.v1.Company
	23, // 10: api.v1.DoNotContact.lead:type_name -> api.v1.Lead
	26, // 11: api.v1.DoNotContact.added_at:type_name -> google.protobuf.Timestamp
	1,  // 12: api.v1.ContactFrequency.interval:type_name -> api.v1.Interval
	26, // 13: api.v1.ContactFrequency.freq_time:type_name -> google.protobuf.Timestamp
	26, // 14: api.v1.ContactFrequency.added_at:type_name -> google.protobuf.Timestamp
	23, // 15: api.v1.ContactFrequency.lead:type_name -> api.v1.Lead
	16, // 16: api.v1.Companies.GetCompany:input_type -> api.v1.GetCompanyRequest
	4,  // 17: api.v1.Companies.CreateCompany:input_type -> api.v1.CreateCompanyRequest
	8,  // 18: api.v1.Companies.UpdateCompany:input_type -> api.v1.UpdateCompanyRequest
	12, // 19: api.v1.Companies.DeleteCompany:input_type -> api.v1.DeleteCompanyRequest
	20, // 20: api.v1.Companies.ListCompanys:input_type -> api.v1.ListCompaniesRequest
	2,  // 21: api.v1.Leads.CreateLead:input_type -> api.v1.CreateLeadRequest
	6,  // 22: api.v1.Leads.UpdateLead:input_type -> api.v1.UpdateLeadRequest
	10, // 23: api.v1.Leads.DeleteLead:input_type -> api.v1.DeleteLeadRequest
	14, // 24: api.v1.Leads.GetLead:input_type -> api.v1.GetLeadRequest
	18, // 25: api.v1.Leads.ListLeads:input_type -> api.v1.ListLeadsRequest
	17, // 26: api.v1.Companies.GetCompany:output_type -> api.v1.GetCompanyReply
	5,  // 27: api.v1.Companies.CreateCompany:output_type -> api.v1.CreateCompanyReply
	9,  // 28: api.v1.Companies.UpdateCompany:output_type -> api.v1.UpdateCompanyReply
	13, // 29: api.v1.Companies.DeleteCompany:output_type -> api.v1.DeleteCompanyReply
	21, // 30: api.v1.Companies.ListCompanys:output_type -> api.v1.ListCompaniesReply
	3,  // 31: api.v1.Leads.CreateLead:output_type -> api.v1.CreateLeadReply
	7,  // 32: api.v1.Leads.UpdateLead:output_type -> api.v1.UpdateLeadReply
	11, // 33: api.v1.Leads.DeleteLead:output_type -> api.v1.DeleteLeadReply
	15, // 34: api.v1.Leads.GetLead:output_type -> api.v1.GetLeadReply
	19, // 35: api.v1.Leads.ListLeads:output_type -> api.v1.ListLeadsReply
	26, // [26:36] is the sub-list for method output_type
	16, // [16:26] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_v1_b2b_lead_proto_init() }
func file_v1_b2b_lead_proto_init() {
	if File_v1_b2b_lead_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_b2b_lead_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeadsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeadsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCompaniesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCompaniesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoNotContact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_b2b_lead_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactFrequency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_b2b_lead_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_v1_b2b_lead_proto_goTypes,
		DependencyIndexes: file_v1_b2b_lead_proto_depIdxs,
		EnumInfos:         file_v1_b2b_lead_proto_enumTypes,
		MessageInfos:      file_v1_b2b_lead_proto_msgTypes,
	}.Build()
	File_v1_b2b_lead_proto = out.File
	file_v1_b2b_lead_proto_rawDesc = nil
	file_v1_b2b_lead_proto_goTypes = nil
	file_v1_b2b_lead_proto_depIdxs = nil
}
